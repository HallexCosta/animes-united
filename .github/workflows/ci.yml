name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    name: Test on ${{ matrix.node_version }} and ${{ matrix.os }}
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x, 15.x]
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node_version }}
        uses: actions/setup-node@v1
        env:
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: 'true'
        with:
          node-version: ${{ matrix.node_version }}
          args: install:ci

      # - name: install puppeteer libraries
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y libgbm1

      - name: Install dependencies
        run: yarn install:ci

      - name: Run tests
        uses: djp3/puppeteer-headful@master
        env:
          MONGODB_URI_TEST: ${{ secrets.MONGODB_URI_TEST }}
          PUPPETEER_DEBUG: 'false'
          CI: 'true'
        with:
          args: yarn lerna:test

  deploy-development:
    runs-on: ubuntu-latest
    environment:
      name: dev
      url: 'development.animes-united.dev'
    needs: build
    steps:
      - name: Run deploy in environment Development
        run: echo Deploy Development

  deploy-homologation:
    runs-on: ubuntu-latest
    environment:
      name: homologation
      url: 'homologation.animes-united.dev'
    needs: deploy-development
    steps:
      - name: Run deploy in environment Homologation
        run: echo Deploy Homologation

  deploy-production:
    runs-on: ubuntu-latest
    environment:
      name: production
      url: 'production.animes-united.dev'
    needs: deploy-homologation
    steps:
      - name: Run deploy in environment Production
        run: echo Deploy Production
